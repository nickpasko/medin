// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
#pragma warning disable 1591, 3008, 3009
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    static readonly AdminClass s_Admin = new AdminClass();
    public static AdminClass Admin { get { return s_Admin; } }
    public static MedIn.Web.Controllers.AboutCompanyController AboutCompany = new MedIn.Web.Controllers.T4MVC_AboutCompanyController();
    public static MedIn.Web.Controllers.AccountsController Accounts = new MedIn.Web.Controllers.T4MVC_AccountsController();
    public static MedIn.Web.Controllers.ArticlesController Articles = new MedIn.Web.Controllers.T4MVC_ArticlesController();
    public static MedIn.Web.Controllers.ContactsController Contacts = new MedIn.Web.Controllers.T4MVC_ContactsController();
    public static MedIn.Web.Controllers.DefaultController Default = new MedIn.Web.Controllers.T4MVC_DefaultController();
    public static MedIn.Web.Controllers.FaqController Faq = new MedIn.Web.Controllers.T4MVC_FaqController();
    public static MedIn.Web.Controllers.NewsController News = new MedIn.Web.Controllers.T4MVC_NewsController();
    public static T4MVC.MailsController Mails = new T4MVC.MailsController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class AdminClass
    {
        public readonly string Name = "Admin";
        public MedIn.Web.Areas.Admin.Controllers.AccountController Account = new MedIn.Web.Areas.Admin.Controllers.T4MVC_AccountController();
        public MedIn.Web.Areas.Admin.Controllers.ArticleController Article = new MedIn.Web.Areas.Admin.Controllers.T4MVC_ArticleController();
        public MedIn.Web.Areas.Admin.Controllers.GalleriesController Galleries = new MedIn.Web.Areas.Admin.Controllers.T4MVC_GalleriesController();
        public MedIn.Web.Areas.Admin.Controllers.LocationsController Locations = new MedIn.Web.Areas.Admin.Controllers.T4MVC_LocationsController();
        public MedIn.Web.Areas.Admin.Controllers.NewsItemsController NewsItems = new MedIn.Web.Areas.Admin.Controllers.T4MVC_NewsItemsController();
        public MedIn.Web.Areas.Admin.Controllers.QuestionsController Questions = new MedIn.Web.Areas.Admin.Controllers.T4MVC_QuestionsController();
        public MedIn.Web.Areas.Admin.Controllers.SiteSettingsController SiteSettings = new MedIn.Web.Areas.Admin.Controllers.T4MVC_SiteSettingsController();
        public MedIn.Web.Areas.Admin.Controllers.UtilsController Utils = new MedIn.Web.Areas.Admin.Controllers.T4MVC_UtilsController();
        public T4MVC.Admin.SharedController Shared = new T4MVC.Admin.SharedController();
    }
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_MedIn_OziCms_ViewModels_FineUploaderResult : MedIn.OziCms.ViewModels.FineUploaderResult, IT4MVCActionResult
{
    public T4MVC_MedIn_OziCms_ViewModels_FineUploaderResult(string area, string controller, string action, string protocol = null): base(default(bool), null, null, null)
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string costReferrals_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/costReferrals.min.js") ? Url("costReferrals.min.js") : Url("costReferrals.js");
        public static readonly string default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/default.min.js") ? Url("default.min.js") : Url("default.js");
        public static readonly string jquery_2_0_1_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-2.0.1.intellisense.min.js") ? Url("jquery-2.0.1.intellisense.min.js") : Url("jquery-2.0.1.intellisense.js");
        public static readonly string jquery_2_0_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-2.0.1.min.js") ? Url("jquery-2.0.1.min.js") : Url("jquery-2.0.1.js");
        public static readonly string jquery_2_0_1_min_js = Url("jquery-2.0.1.min.js");
        public static readonly string jquery_2_0_1_min_map = Url("jquery-2.0.1.min.map");
        public static readonly string jquery_ui_1_11_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.11.1.min.js") ? Url("jquery-ui-1.11.1.min.js") : Url("jquery-ui-1.11.1.js");
        public static readonly string jquery_ui_min_1_11_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui.min-1.11.1.min.js") ? Url("jquery-ui.min-1.11.1.min.js") : Url("jquery-ui.min-1.11.1.js");
        public static readonly string jquery_cookie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.cookie.min.js") ? Url("jquery.cookie.min.js") : Url("jquery.cookie.js");
        public static readonly string jquery_lightbox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.lightbox.min.js") ? Url("jquery.lightbox.min.js") : Url("jquery.lightbox.js");
        public static readonly string jquery_pjax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.pjax.min.js") ? Url("jquery.pjax.min.js") : Url("jquery.pjax.js");
        public static readonly string jquery_ui_core_min_js = Url("jquery.ui.core.min.js");
        public static readonly string jquery_ui_rcarousel_min_js = Url("jquery.ui.rcarousel.min.js");
        public static readonly string jquery_ui_widget_min_js = Url("jquery.ui.widget.min.js");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        public static readonly string knockout_2_2_1_debug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knockout-2.2.1.debug.min.js") ? Url("knockout-2.2.1.debug.min.js") : Url("knockout-2.2.1.debug.js");
        public static readonly string knockout_2_2_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knockout-2.2.1.min.js") ? Url("knockout-2.2.1.min.js") : Url("knockout-2.2.1.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class mp {
            private const string URLPATH = "~/Scripts/mp";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string jquery_magnific_popup_min_js = Url("jquery.magnific-popup.min.js");
            public static readonly string magnific_popup_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/magnific-popup.min.css") ? Url("magnific-popup.min.css") : Url("magnific-popup.css");
                 
        }
    
        public static readonly string ResponciveSlides_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ResponciveSlides.min.js") ? Url("ResponciveSlides.min.js") : Url("ResponciveSlides.js");
        public static readonly string toastr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/toastr.min.js") ? Url("toastr.min.js") : Url("toastr.js");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class i {
            private const string URLPATH = "~/Content/i";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string logo_png = Url("logo.png");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class themes {
                private const string URLPATH = "~/Content/i/themes";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class custom {
                    private const string URLPATH = "~/Content/i/themes/custom";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Content/i/themes/custom/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string arrow_left_png = Url("arrow-left.png");
                        public static readonly string arrow_right_png = Url("arrow-right.png");
                        public static readonly string arrow_brcmb_png = Url("arrow_brcmb.png");
                        public static readonly string banner_4_jpg = Url("banner_4.jpg");
                        public static readonly string beta_plus_0_jpg = Url("beta_plus_0.jpg");
                        public static readonly string cr_1_0_jpg = Url("cr_1_0.jpg");
                        public static readonly string footer_line_jpg = Url("footer_line.jpg");
                        public static readonly string header_bg_jpg = Url("header-bg.jpg");
                        public static readonly string kgm_3p_full_banner_1_jpg = Url("kgm_3p_full_banner_1.jpg");
                        public static readonly string mail_png = Url("mail.png");
                        public static readonly string menu_bg_jpg = Url("menu-bg.jpg");
                        public static readonly string menu_links_png = Url("menu_links.png");
                        public static readonly string more_png = Url("more.png");
                        public static readonly string obogrev_full_banner_0_jpg = Url("obogrev_full_banner_0.jpg");
                        public static readonly string page_off_png = Url("page-off.png");
                        public static readonly string page_on_png = Url("page-on.png");
                        public static readonly string paginator_png = Url("paginator.png");
                        public static readonly string phone_2_png = Url("phone-2.png");
                        public static readonly string show_room_full_banner_jpg = Url("show-room_full_banner.jpg");
                        public static readonly string slider_bg_png = Url("slider-bg.png");
                        public static readonly string thumbs_png = Url("thumbs.png");
                        public static readonly string top_line_jpg = Url("top-line.jpg");
                        public static readonly string z_shtativ_full_banner_jpg = Url("z-shtativ_full_banner.jpg");
                    }
                
                }
            
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class templ {
            private const string URLPATH = "~/Content/templ";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class themes {
            private const string URLPATH = "~/Content/themes";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class @base {
                private const string URLPATH = "~/Content/themes/base";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/accordion.min.css") ? Url("accordion.min.css") : Url("accordion.css");
                     
                public static readonly string all_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/all.min.css") ? Url("all.min.css") : Url("all.css");
                     
                public static readonly string autocomplete_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/autocomplete.min.css") ? Url("autocomplete.min.css") : Url("autocomplete.css");
                     
                public static readonly string base_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/base.min.css") ? Url("base.min.css") : Url("base.css");
                     
                public static readonly string button_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/button.min.css") ? Url("button.min.css") : Url("button.css");
                     
                public static readonly string core_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/core.min.css") ? Url("core.min.css") : Url("core.css");
                     
                public static readonly string datepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datepicker.min.css") ? Url("datepicker.min.css") : Url("datepicker.css");
                     
                public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                     
                public static readonly string draggable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/draggable.min.css") ? Url("draggable.min.css") : Url("draggable.css");
                     
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class images {
                    private const string URLPATH = "~/Content/themes/base/images";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
                    public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
                    public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
                    public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
                    public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
                    public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
                    public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
                    public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
                    public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                    public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
                    public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
                    public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
                    public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
                }
            
                public static readonly string menu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menu.min.css") ? Url("menu.min.css") : Url("menu.css");
                     
                public static readonly string progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/progressbar.min.css") ? Url("progressbar.min.css") : Url("progressbar.css");
                     
                public static readonly string resizable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/resizable.min.css") ? Url("resizable.min.css") : Url("resizable.css");
                     
                public static readonly string selectable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/selectable.min.css") ? Url("selectable.min.css") : Url("selectable.css");
                     
                public static readonly string selectmenu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/selectmenu.min.css") ? Url("selectmenu.min.css") : Url("selectmenu.css");
                     
                public static readonly string slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slider.min.css") ? Url("slider.min.css") : Url("slider.css");
                     
                public static readonly string sortable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sortable.min.css") ? Url("sortable.min.css") : Url("sortable.css");
                     
                public static readonly string spinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/spinner.min.css") ? Url("spinner.min.css") : Url("spinner.css");
                     
                public static readonly string tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tabs.min.css") ? Url("tabs.min.css") : Url("tabs.css");
                     
                public static readonly string theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/theme.min.css") ? Url("theme.min.css") : Url("theme.css");
                     
                public static readonly string tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tooltip.min.css") ? Url("tooltip.min.css") : Url("tooltip.css");
                     
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class w {
            private const string URLPATH = "~/Content/w";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class fileicons {
                private const string URLPATH = "~/Content/w/fileicons";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            }
        
        }
    
    }


    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Areas {
        private const string URLPATH = "~/Areas";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class Admin {
            private const string URLPATH = "~/Areas/Admin";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Scripts {
                private const string URLPATH = "~/Areas/Admin/Scripts";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Default {
                    private const string URLPATH = "~/Areas/Admin/Scripts/Default";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string autoNumeric_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/autoNumeric.min.js") ? Url("autoNumeric.min.js") : Url("autoNumeric.js");
                    public static readonly string Default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Default.min.js") ? Url("Default.min.js") : Url("Default.js");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class drag {
                        private const string URLPATH = "~/Areas/Admin/Scripts/Default/drag";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_dragsort_0_5_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.dragsort-0.5.1.min.js") ? Url("jquery.dragsort-0.5.1.min.js") : Url("jquery.dragsort-0.5.1.js");
                        public static readonly string jquery_dragsort_0_5_1_min_js = Url("jquery.dragsort-0.5.1.min.js");
                    }
                
                    public static readonly string files_logic_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/files-logic.min.js") ? Url("files-logic.min.js") : Url("files-logic.js");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class fileuploader {
                        private const string URLPATH = "~/Areas/Admin/Scripts/Default/fileuploader";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string button_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/button.min.js") ? Url("button.min.js") : Url("button.js");
                        public static readonly string dnd_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dnd.min.js") ? Url("dnd.min.js") : Url("dnd.js");
                        public static readonly string handler_base_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/handler.base.min.js") ? Url("handler.base.min.js") : Url("handler.base.js");
                        public static readonly string handler_form_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/handler.form.min.js") ? Url("handler.form.min.js") : Url("handler.form.js");
                        public static readonly string handler_xhr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/handler.xhr.min.js") ? Url("handler.xhr.min.js") : Url("handler.xhr.js");
                        public static readonly string header_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/header.min.js") ? Url("header.min.js") : Url("header.js");
                        public static readonly string jquery_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-plugin.min.js") ? Url("jquery-plugin.min.js") : Url("jquery-plugin.js");
                        public static readonly string uploader_basic_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/uploader.basic.min.js") ? Url("uploader.basic.min.js") : Url("uploader.basic.js");
                        public static readonly string uploader_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/uploader.min.js") ? Url("uploader.min.js") : Url("uploader.js");
                        public static readonly string util_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/util.min.js") ? Url("util.min.js") : Url("util.js");
                    }
                
                    public static readonly string jquery_1_7_1_min_js = Url("jquery-1.7.1.min.js");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class knockout {
                        private const string URLPATH = "~/Areas/Admin/Scripts/Default/knockout";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string knockout_2_2_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knockout-2.2.1.min.js") ? Url("knockout-2.2.1.min.js") : Url("knockout-2.2.1.js");
                        public static readonly string knockout_sortable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knockout-sortable.min.js") ? Url("knockout-sortable.min.js") : Url("knockout-sortable.js");
                    }
                
                    public static readonly string List_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/List.min.js") ? Url("List.min.js") : Url("List.js");
                    public static readonly string Mktree_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Mktree.min.js") ? Url("Mktree.min.js") : Url("Mktree.js");
                    public static readonly string Myckconfig_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Myckconfig.min.js") ? Url("Myckconfig.min.js") : Url("Myckconfig.js");
                    public static readonly string sh_html_min_js = Url("sh_html.min.js");
                    public static readonly string sh_javascript_min_js = Url("sh_javascript.min.js");
                    public static readonly string sh_main_min_js = Url("sh_main.min.js");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class toastr {
                        private const string URLPATH = "~/Areas/Admin/Scripts/Default/toastr";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string toastr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/toastr.min.js") ? Url("toastr.min.js") : Url("toastr.js");
                    }
                
                }
            
            }
        
        }
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class Scripts {}
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class Styles {}
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009


